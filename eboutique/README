# 20170412 eboutique (projet 1)
cd /home/bertrand/eboutique

1> lancer le serveur de développement
python manage.py runserver

2> test / validation
http://127.0.0.1:8000/

3> changer de port (5555)
python manage.py runserver 5555

4> rendre disponible son serveur sur tout le réseau
python manage.py runserver 0.0.0.0:8000

5> mode debug
settings.py
DEBUG = True

6> parametres en tout genre dans settings.py
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS' : { "init_command": "SET foreign_key_checks = 0;" },
        'NAME': 'eboutique',
        'USER': 'root',
        'PASSWORD': 'MOTDEPASSE',
        'HOST': '127.0.0.1',
        'PORT': '',
    }
}
TIME_ZONE = "Europe/Paris"
LANGUAGE_CODE = "fr-fr"

#Paramétrer les fichiers statiques (ex: css, js, etc...) voir la doc :
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    BASE_DIR + '/static/',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ '', 'test'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

MEDIA_URL = '/medias/'
MEDIA_ROOT = BASE_DIR + '/medias/'

7> Applications Django
# premiere application
python manage.py startapp backoffice

# premiere page
eboutique/urls.py ~= routage vers le contenu ex: racine du site, ou home, ou etc...
eboutique/views.py ~= fonctions qui renvoie le contenu ici du texte..."Hello world!"


8> ORM Base de données ex: SQLITE
    a. config (settings.py)

    b. objets (models.py)

    c. SYNC_DB =
python manage.py makemigrations (~ build)
python manage.py migrate (~ commit)

    d. DB Browser (ok 2 tables créées...)

    e. tests

####################################

9> activer le shell du manager
python manage.py shell

####################################

10> ORM
 a. créer un objet
    Product(name="objet", code=1234).save()
 b. créer une instance
    i = ProductItem.objects.create(code="5555", color="blue", product=p)

11> Objects, le manager des modèles
Product.objects

12> Afficher toutes les entrées d'un modèle
Product.objects.all()

13> Récupérer un objet
Product.objects.get(pk=2) ou Product.objects.get(code=1234)

14> Sélection d'objets
Product.objects.filter(pk=2)
=> retourne une liste

=> beaucoup d'expressions de sélections dans filet : name__startswith="", name__icontains, etc.

15> Login
    a. config (settings.py)
        LOGIN_REDIRECT_URL = '/backoffice/'
        LOGIN_URL = '/'
        TEMPLATE_DIRS = (
            BASE_DIR + '/templates/',
        )
    b. vues pour Login in et out
    class LoginView(TemplateView): et class LogoutView(TemplateView):
    les html associés...  front...

16> Create superuser
python manage.py createsuperuser
bert
3615conserve@gmail.com
pass CE

17> les champs des modèles
http://apprendre-python.com/page-django-champs-modeles-orm-model


